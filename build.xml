<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:jacoco="antlib:org.jacoco.ant"
         name="digidoc4j builder" basedir="."
         default="base">

  <property environment="env"/>
  <property name="build.dir" value="build"/>
  <property name="junit.dir" value="junit_report"/>
  <property name="coverage.dir" value="coverage"/>
  <property name="dist.dir" value="dist"/>
  <!--<property name="version" value="0.0.0"/>-->

  <target name="version">
    <exec executable="sh" outputproperty="lib.version">
      <arg value="-c"/>
      <arg value="git tag -l public* | tail -1 | awk -F '-' '{print $2}'"/>
      <!--| awk -F '-' '{print $2}'""/>-->
    </exec>
    <echo>Version = ${lib.version}</echo>
  </target>

  <condition property="version.suffix" value=".${env.BUILD_NUMBER}-beta" else=".LOCAL_BUILD-beta">
    <isset property="env.BUILD_NUMBER"/>
  </condition>

  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
    <classpath path="lib/jacocoant.jar"/>
  </taskdef>

  <path id="javac.classpath">
    <fileset dir="lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <property name="classpath" value="javac.classpath"/>

  <path id="run.classpath">
    <pathelement location="${build.dir}"/>
  </path>

  <target name="javadoc">
    <mkdir dir="javadoc"/>
    <javadoc packagenames="org.digidoc4j.api" destdir="javadoc" encoding="UTF-8">
      <packageset dir="src" defaultexcludes="yes">
        <include name="org/digidoc4j/api/**"/>
        <exclude name="org/digidoc4j/api/*Impl.java"/>
      </packageset>
    </javadoc>
    <jar destfile="${dist.dir}/digidoc4j-${lib.version}${version.suffix}-javadoc.jar" basedir="javadoc"/>
  </target>

  <target name="compile">
    <mkdir dir="${build.dir}"/>
    <copy todir="${build.dir}">
      <fileset dir="resources"/>
    </copy>
    <javac destdir="${build.dir}" includeantruntime="false" source="1.6" debug="on" target="1.6" encoding="UTF-8">
      <src path="src"/>
      <src path="test"/>
      <classpath refid="${classpath}"/>
    </javac>
    <jar destfile="${dist.dir}/digidoc4j-${lib.version}${version.suffix}.jar">
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="Republic of Estonia Information System Authority"/>
        <attribute name="Implementation-Title" value="Java BDoc/DigiDoc library"/>
        <attribute name="Implementation-Version" value="${lib.version}"/>
      </manifest>
      <fileset dir="${build.dir}">
        <exclude name="prototype/"/>
        <exclude name="**/*Test.class"/>
      </fileset>
      <fileset dir=".">
        <include name="conf/*.*"/>
      </fileset>
    </jar>
  </target>

  <target name="library">
    <zip destfile="${dist.dir}/digidoc4j-library-${lib.version}${version.suffix}.zip">
      <zipfileset dir="lib" includes="*.jar" excludes="*-source.jar *-sources.jar *-javadoc.jar"/>
    </zip>
  </target>

  <target name="utility" depends="compile">
    <mkdir dir="${build.dir}/util"/>
    <jar jarfile="${build.dir}/util/temp.jar">
      <zipgroupfileset dir="dist" includes="**/digidoc4j-*.jar" excludes="*-javadoc.jar *-sources.jar"/>
      <zipgroupfileset dir="sd-dss/apps/dss/core" includes="**/dss-*.jar" excludes="*-javadoc.jar *-sources.jar"/>
      <zipgroupfileset dir="lib" includes="**/*.jar"
                       excludes="dss-*.jar *-source.jar *-sources.jar *-javadoc.jar bcprov-*.jar jacoco*.jar mockito*.jar"/>
    </jar>

    <jar destfile="${build.dir}/util/digidoc4j-util.jar">
      <zipfileset src="${build.dir}/util/temp.jar" excludes="META-INF/*.SF META-INF/*.RSA META-INF/*.DSA"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="Republic of Estonia Information System Authority"/>
        <attribute name="Implementation-Title" value="Java BDoc/DigiDoc utility"/>
        <attribute name="Implementation-Version" value="${lib.version}"/>
        <attribute name="Main-Class" value="org.digidoc4j.main.DigiDoc4J"/>
        <attribute name="Class-Path" value="./bcprov-jdk15on-1.49.jar"/>
      </manifest>
    </jar>
    <delete file="${build.dir}/util/temp.jar"/>
    <copy todir="${build.dir}/util">
      <fileset dir="lib" includes="**/bcprov-*.jar"/>
      <fileset dir="." includes="log4j.for.util.properties"/>
    </copy>
    <move file="${build.dir}/util/log4j.for.util.properties" tofile="${build.dir}/util/log4j.properties"/>
    <zip destfile="${dist.dir}/digidoc4j-util-${lib.version}${version.suffix}.zip"
         basedir="${build.dir}/util"/>
    <delete dir="${build.dir}/util"/>
  </target>

  <target name="source">
    <jar destfile="${dist.dir}/digidoc4j-${lib.version}${version.suffix}-sources.jar" basedir="src"/>
  </target>

  <target name="copy.dss.library">
  <copy todir="lib">
      <fileset dir="sd-dss/apps/dss/core/dss-common/target" includes="dss-common*.jar" excludes="*-sources.jar "/>
      <fileset dir="sd-dss/apps/dss/core/dss-document/target" includes="dss-document*.jar" excludes="*-sources.jar "/>
      <fileset dir="sd-dss/apps/dss/core/dss-service/target" includes="dss-service*.jar" excludes="*-sources.jar "/>
      <fileset dir="sd-dss/apps/dss/core/dss-spi/target" includes="dss-spi*.jar" excludes="*-sources.jar "/>
    </copy>
  </target>

  <target name="base" depends="version, clean, javadoc, source, compile, utility, library"/>

  <target name="all" depends="copy.dss.library, test, coverage.report"/>

  <target name="test" depends="base">
    <mkdir dir="${junit.dir}"/>
    <jacoco:coverage>
      <junit fork="true">
        <classpath refid="javac.classpath"/>
        <classpath>
          <pathelement location="build"/>
        </classpath>
        <batchtest>
          <fileset dir="${build.dir}" includes="**/*Test.class"/>
        </batchtest>
        <formatter type="brief" usefile="false"/>
        <formatter type="xml"/>
      </junit>
    </jacoco:coverage>
    <junitreport todir="${junit.dir}">
      <fileset dir=".">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="noframes" todir="${junit.dir}/html"/>
    </junitreport>
  </target>

  <target name="coverage.report">
    <jacoco:report>
      <executiondata>
        <file file="jacoco.exec"/>
      </executiondata>

      <structure name="DigiDoc4J">
        <classfiles>
          <fileset dir="${build.dir}">
            <exclude name="**/*Test*"/>
            <exclude name="prototype/"/>
            <exclude name="org/bouncycastle/"/>
            <exclude name="org/digidoc4j/main/"/>
            <exclude name="util/"/>
          </fileset>
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="src"/>
        </sourcefiles>
      </structure>

      <html destdir="${coverage.dir}"/>
    </jacoco:report>
  </target>

  <target name="clean">
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="." includes="TEST*.xml"/>
      <fileset dir="${build.dir}"/>
      <fileset dir="${dist.dir}"/>
      <fileset dir="javadoc"/>
    </delete>
  </target>

</project>