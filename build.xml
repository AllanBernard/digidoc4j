<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:jacoco="antlib:org.jacoco.ant" xmlns:artifact="urn:org.apache.maven.artifact.ant"
         name="digidoc4j builder" basedir="."
         default="base">

  <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:org.apache.maven.artifact.ant"
           classpath="maven-ant/maven-ant-tasks-2.1.3.jar"/>

  <property file="build.properties"/>
  <property environment="env"/>
  <property name="build.dir" value="build"/>
  <property name="junit.dir" value="junit_report"/>
  <property name="coverage.dir" value="coverage"/>
  <property name="dist.dir" value="dist"/>
  <property name="utility.package.lib" value="utility-package-lib"/>
  <property name="zip.package.lib" value="zip-package-lib"/>

 <property name="publish.version" value="1.0" />
 <property name="lib.version" value="${publish.version}"/>

  <!-- Maven config -->
  <artifact:pom id="maven.project" file="${basedir}/pom.xml" />

  <artifact:dependencies filesetId="libraries.all">
    <pom refid="maven.project" />
  </artifact:dependencies>

  <artifact:dependencies filesetId="libraries.zip" useScope="compile">
    <pom refid="maven.project" />
  </artifact:dependencies>

  <fileset id="dssUtil" dir="${basedir}/${utility.package.lib}">
    <filename name="/dss*.jar"/>
  </fileset>

  <fileset id="dssZip" dir="${basedir}/${zip.package.lib}">
    <filename name="/dss*.jar"/>
  </fileset>

  <target name="copyJarsToLib">
    <copy todir="${basedir}/lib">
      <fileset refid="libraries.all" />
      <mapper type="flatten" />
    </copy>
  </target>

  <target name="copyJarsToUtil">
    <mkdir dir="${utility.package.lib}"/>
    <copy todir="${basedir}/${utility.package.lib}/temp" flatten="true" overwrite="true">
      <fileset refid="libraries.zip" />
    </copy>
    <copy todir="${basedir}/${utility.package.lib}" flatten="true" overwrite="true">
      <mapper type="regexp" from="(.+?-.*|.+?)-[0-9]*.*\.jar$" to="\1.jar" />
      <fileset dir="${basedir}/${utility.package.lib}/temp" />
    </copy>
    <delete dir="${basedir}/${utility.package.lib}/temp"/>
    <delete file="${basedir}/${utility.package.lib}/log4j.jar"/>
    <delete file="${basedir}/${utility.package.lib}/validation-policy.jar"/>
    <delete>
      <fileset refid="dssUtil"/>
    </delete>
  </target>

  <target name="copyJarsToZIP">
    <mkdir dir="${zip.package.lib}"/>
    <copy todir="${basedir}/${zip.package.lib}/temp" flatten="true" overwrite="true">
      <fileset refid="libraries.zip" />
    </copy>
    <copy todir="${basedir}/${zip.package.lib}" flatten="true" overwrite="true">
      <mapper type="regexp" from="(.+?-.*|.+?)-[0-9]*.*\.jar$" to="\1.jar" />
      <fileset dir="${basedir}/${zip.package.lib}/temp" />
    </copy>
    <delete dir="${basedir}/${zip.package.lib}/temp"/>
    <delete file="${basedir}/${zip.package.lib}/log4j-over-slf4j.jar"/>
    <delete file="${basedir}/${zip.package.lib}/logback-classic.jar"/>
    <delete file="${basedir}/${zip.package.lib}/logback-core.jar"/>
    <delete file="${basedir}/${zip.package.lib}/validation-policy.jar"/>
    <delete>
      <fileset refid="dssZip"/>
    </delete>
  </target>

 <target name="version" unless="lib.version">
   <exec executable="sh" outputproperty="lib.version">
     <arg value="-c"/>
     <arg value="git tag -l public* --sort=version:refname | tail -1 | awk -F '-' '{print $2}'"/>
     <!--| awk -F '-' '{print $2}'""/>-->
    </exec>
    <echo>Version = ${lib.version}</echo>
  </target>

  <!--<condition property="version.suffix" value=".${env.BUILD_NUMBER}-beta" else="">
   <isset property="env.BUILD_NUMBER"/>
 </condition>-->

 <property name="artifact.name" value="digidoc4j-${lib.version}"/>

 <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
   <classpath path="lib/jacocoant.jar"/>
 </taskdef>

 <path id="javac.classpath">
   <fileset dir="lib">
     <include name="**/*.jar"/>
   </fileset>
 </path>

 <property name="classpath" value="javac.classpath"/>

 <path id="run.classpath">
   <pathelement location="${build.dir}"/>
 </path>

 <target name="javadoc">
   <mkdir dir="javadoc"/>
   <javadoc packagenames="org.digidoc4j" destdir="javadoc" encoding="UTF-8" overview="doc/overview.html"
            classpathref="javac.classpath">
     <packageset dir="src" defaultexcludes="yes">
       <include name="org/digidoc4j"/>
       <include name="org/digidoc4j/exceptions"/>
       <include name="org/digidoc4j/signers"/>
     </packageset>
   </javadoc>
   <jar destfile="${dist.dir}/${artifact.name}-javadoc.jar" basedir="javadoc"/>
   <mkdir dir="javadoc/doc-files"/>
   <copy todir="javadoc/doc-files">
     <fileset dir="doc/images"/>
   </copy>
 </target>

 <target name="compile" depends="copyJarsToLib">
   <mkdir dir="${build.dir}"/>
   <copy todir="${build.dir}">
     <fileset dir="resources">
       <exclude name="logback.xml/"/>
     </fileset>
   </copy>
   <javac destdir="${build.dir}" includeantruntime="false" source="1.7" debug="on" target="1.7" encoding="UTF-8">
     <src path="src"/>
     <src path="test"/>
     <classpath refid="${classpath}"/>
   </javac>
   <jar destfile="${dist.dir}/${artifact.name}.jar">
     <manifest>
       <attribute name="Built-By" value="${user.name}"/>
       <attribute name="Implementation-Vendor" value="Republic of Estonia Information System Authority"/>
       <attribute name="Implementation-Title" value="Java BDoc/DigiDoc library"/>
       <attribute name="Implementation-Version" value="${lib.version}"/>
     </manifest>
     <fileset dir="${build.dir}">
       <exclude name="prototype/"/>
       <exclude name="**/*Test.class"/>
     </fileset>
     <fileset dir=".">
       <include name="conf/*.*"/>
       <include name="keystore/*.*"/>
     </fileset>
   </jar>
 </target>

  <target name="library" depends="copyJarsToZIP">
   <zip destfile="${dist.dir}/${artifact.name}-library.zip">
     <zipfileset dir="${zip.package.lib}" includes="*.jar"/>
     <zipfileset dir="lib" includes="**/dss*.jar **/validation-policy*.jar"/>
   </zip>
 </target>

 <target name="utility" depends="copyJarsToUtil">
  <mkdir dir="${build.dir}/util"/>
  <jar jarfile="${build.dir}/util/temp.jar">
    <zipgroupfileset dir="lib" includes="**/dss*.jar **/validation-policy*.jar"/>
    <zipgroupfileset dir="${utility.package.lib}" includes="**/*.jar" excludes="bcprov-*.jar"/>
    <zipgroupfileset dir="dist" includes="**/digidoc4j-*.jar" excludes="*-javadoc.jar *-sources.jar"/>
  </jar>

  <jar destfile="${build.dir}/util/digidoc4j-util.jar">
    <zipfileset src="${build.dir}/util/temp.jar" excludes="META-INF/*.SF META-INF/*.RSA META-INF/*.DSA"/>
    <manifest>
      <attribute name="Built-By" value="${user.name}"/>
      <attribute name="Implementation-Vendor" value="Republic of Estonia Information System Authority"/>
      <attribute name="Implementation-Title" value="Java BDoc/DigiDoc utility"/>
      <attribute name="Implementation-Version" value="${lib.version}"/>
      <attribute name="Main-Class" value="org.digidoc4j.main.DigiDoc4J"/>
      <attribute name="Class-Path" value=". ./bcprov-jdk15on.jar"/>
    </manifest>
  </jar>
  <delete file="${build.dir}/util/temp.jar"/>
  <copy todir="${build.dir}/util">
    <fileset dir="${utility.package.lib}" includes="**/bcprov-*.jar"/>
    <fileset dir="resources" includes="logback.xml"/>
  </copy>
  <zip destfile="${dist.dir}/${artifact.name}-util.zip"
       basedir="${build.dir}/util"/>
  <delete dir="${build.dir}/util"/>
</target>

<target name="source">
  <jar destfile="${dist.dir}/${artifact.name}-sources.jar" basedir="src"/>
</target>

<target name="base" depends="version, clean, copyJarsToLib, source, compile, utility, library"/>

<target name="make.utility" depends="version, clean, compile, utility"/>

<target name="all" depends="test, javadoc"/>

<target name="test" depends="base">
 <mkdir dir="${junit.dir}"/>
  <jacoco:coverage>
    <junit fork="true">
      <sysproperty key="logback.configurationFile" value="resources/logback.xml"/>
      <classpath refid="javac.classpath"/>
      <classpath>
        <pathelement location="build"/>
      </classpath>
      <classpath>
        <pathelement location="test-tsl"/>
      </classpath>
      <classpath>
        <pathelement location="testFiles"/>
      </classpath>
      <batchtest>
        <fileset dir="${build.dir}" includes="**/*Test.class"/>
      </batchtest>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
    </junit>
  </jacoco:coverage>
  <junitreport todir="${junit.dir}">
    <fileset dir=".">
      <include name="TEST-*.xml"/>
    </fileset>
    <report format="noframes" todir="${junit.dir}/html"/>
  </junitreport>
</target>

<target name="runtest">
  <junit fork="true">
    <classpath refid="javac.classpath"/>
    <classpath>
      <pathelement location="build"/>
    </classpath>
    <batchtest>
      <fileset dir="${build.dir}" includes="**/*Test.class"/>
    </batchtest>
    <formatter type="brief" usefile="false"/>
    <formatter type="xml"/>
  </junit>
</target>

<target name="coverage.report">
  <jacoco:report>
    <executiondata>
      <file file="jacoco.exec"/>
    </executiondata>

    <structure name="DigiDoc4J">
      <classfiles>
        <fileset dir="${build.dir}">
          <exclude name="**/*Test*"/>
          <exclude name="eu/"/>
          <exclude name="prototype/"/>
          <exclude name="org/bouncycastle/"/>
          <exclude name="org/digidoc4j/main/"/>
          <exclude name="util/"/>
        </fileset>
      </classfiles>
      <sourcefiles encoding="UTF-8">
        <fileset dir="src"/>
      </sourcefiles>
    </structure>

    <html destdir="${coverage.dir}"/>
  </jacoco:report>
</target>

<target name="clean">
  <delete includeemptydirs="true" failonerror="false">
    <fileset dir="." includes="TEST*.xml"/>
    <fileset dir="${build.dir}"/>
    <fileset dir="${dist.dir}"/>
    <fileset dir="javadoc"/>
    <fileset dir="lib" excludes="esteidtestcerts.jar jacoco*.jar"/>
  </delete>
</target>

</project>